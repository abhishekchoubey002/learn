How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Having a look at the changed contents, indicated by '+' and '-' signs,
    makes it easier to browse the changes instead of having to go through 
    all of it.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    As the time progresses, I think it will save a lot of debugging time, so
    that I have time to make more mistakes and learn from them. :-)
 
What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing to create commits gives full control to the user about 
    when a commit should be created and what should be the contents of that
    commit, rather than letting the system decide when and what to add in a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving multiple files allows a user to keep track of RELATED changes, if any.
    
How can you use the commands git log and git diff to view the history of files?

    git log :  to see the log hisroty
    git diff <C1> <C2> : where C1 and C2 are commit IDs between which we want to
    see the diff 

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
